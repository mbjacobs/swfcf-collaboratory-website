# Generated by Django 3.1.7 on 2021-04-20 11:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('cause_id', models.IntegerField(db_column='CauseID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'db_table': 'Cause',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('channel_id', models.IntegerField(db_column='ChannelID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.TextField(db_column='Text')),
            ],
            options={
                'db_table': 'Channel',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(db_column='EventID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=250, null=True)),
                ('RSVP', models.CharField(blank=True, db_column='RSVP', max_length=100, null=True)),
                ('description', models.TextField(blank=True, db_column='Text')),
                ('user', models.CharField(blank=True, db_column='User', max_length=50)),
            ],
            options={
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('org_id', models.AutoField(db_column='OrgID', primary_key=True, serialize=False)),
                ('ein', models.IntegerField(blank=True, db_column='EIN', null=True)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('address1', models.CharField(db_column='Address1', max_length=100)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=50, null=True)),
                ('city', models.CharField(db_column='City', max_length=50)),
                ('state', models.CharField(db_column='State', max_length=2)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=20, null=True)),
                ('country', models.CharField(db_column='Country', max_length=50)),
                ('phone', models.CharField(db_column='Phone', max_length=45, null=True)),
                ('mission', models.TextField(db_column='MissionStmt')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, db_column='Website', null=True)),
                ('facebook', models.URLField(blank=True, db_column='Facebook', null=True)),
                ('twitter', models.URLField(blank=True, db_column='Twitter', null=True)),
                ('founded', models.IntegerField(blank=True, db_column='YearFounded', null=True)),
                ('cause_id', models.ManyToManyField(to='collaboratory_api.Cause')),
            ],
            options={
                'db_table': 'Organization',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(db_column='PostID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=50)),
                ('text', models.TextField(db_column='Text')),
                ('channel', models.CharField(blank=True, db_column='Channel', max_length=50)),
                ('user', models.CharField(blank=True, db_column='User', max_length=50)),
            ],
            options={
                'db_table': 'Post',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region_id', models.IntegerField(db_column='RegionID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'db_table': 'Region',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.IntegerField(db_column='RoleID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('phone', models.CharField(db_column='Phone', max_length=14, null=True)),
                ('registration_date', models.DateField(auto_now_add=True, db_column='RegistrationDate')),
                ('preferred_pronouns', models.CharField(blank=True, db_column='Pronouns', max_length=25, null=True)),
                ('organization_id', models.ForeignKey(blank=True, db_column='OrganizationID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org', to='collaboratory_api.organization')),
                ('role_id', models.ForeignKey(db_column='RoleID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collaboratory_api.role')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='User_Event_Attendance',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.ForeignKey(db_column='EventID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.event')),
                ('user_id', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.user')),
            ],
            options={
                'db_table': 'User-Event-Attendance',
            },
        ),
        migrations.CreateModel(
            name='Organization_Region',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('organization_id', models.ForeignKey(db_column='OrganizationID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.organization')),
                ('region_id', models.ForeignKey(db_column='RegionID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.region')),
            ],
            options={
                'db_table': 'Organization-Region',
            },
        ),
        migrations.CreateModel(
            name='Organization_Cause_Alignment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('cause_id', models.ForeignKey(db_column='CauseID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.cause')),
                ('organization_id', models.ForeignKey(db_column='OrganizationID', on_delete=django.db.models.deletion.CASCADE, to='collaboratory_api.organization')),
            ],
            options={
                'db_table': 'Organization-Cause-Alignment',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='region_id',
            field=models.ManyToManyField(to='collaboratory_api.Region'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('announcement_id', models.IntegerField(db_column='AnnouncementID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=50)),
                ('text', models.TextField(db_column='Text')),
                ('date', models.DateTimeField(auto_now_add=True, db_column='Date')),
                ('event_id', models.ForeignKey(blank=True, db_column='EventID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collaboratory_api.event')),
                ('user_id', models.ForeignKey(db_column='UserID', null=True, on_delete=django.db.models.deletion.SET_NULL, to='collaboratory_api.user')),
            ],
            options={
                'db_table': 'Announcement',
            },
        ),
    ]
